# yaml-language-server: $schema=https://json-schema.org/draft/2019-09/schema
$id: https://saulo.engineer/contributes/marko-js/schemas/models/attribute
$schema: https://json-schema.org/draft/2019-09/schema
x-stoplight:
  id: 6df5e90f7563f

# This shows up in docs but not on the IDE
description: >-
  An attribute can be defined by simply setting it's type, but allows
  customization of various aspects when defined using an object.

  You can als define an attribute in the root-level property `attributes`
  and later reference it by prefixing its key in the attributes map with a `#`.

oneOf:
  - title: Attribute type
    type: string
    description: The type of the attribute.
    $ref: ../models/attribute.base.yaml#/$defs/attributeType

  - title: Attribute reference
    type: string
    pattern: ^#[\w]+.*
    description: >-
      A key from the root-level `attributes` object.

      Example:

      In the code below, the attribute `#cmp-variant`,
      is defined once in `attributes` and referenced by
      `<FancyButton>` and `<Panel>`.

      ```json
      {
        "attributes": {
          "cmp-variant": {
            "name": "variant",
            "type": "string"
          }
        },
        "<FancyButton>": {
          "@variant": "#cmp-variant"
        },
        "<Panel>": {
          "@variant": "#cmp-variant"
        }
      }
      ```

  - title: Attribute Definition
    $ref: ../models/attribute.object.yaml
    type: object
